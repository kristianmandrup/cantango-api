# CanTango Api

The main API for [CanTango](https://github.com/kristianmandrup/cantango)

## Status: Dec 9 2011

The CanTango API has now been fully spec'ed and all specs pass :) 

## Dependencies

This extension depends on the CanTango [core](https://github.com/kristianmandrup/cantango-core) and follows the extension conventions as described there.

## Core extensions

* Macros
  * User
  * Account
  * Clazz

These macros allow registration of CanTango User and Account models.

### User model registration

```ruby
class User
  tango_user 
end

class Admin
  tango_user 
end
```

### Account model registration

````ruby
class UserAccount
  tango_account
end

class AdminAccount
  tango_account
end

# if masquerading enabled via 'cantango-masquerade' gem
class PublisherAccount
  tango_account :masquerade
end
```

### Generic model registration

The Clazz macro module uses naming conventions to determine if the model is a User or Account model.

````ruby
class UserAccount
  cantango
end

class Admin
  cantango
end

# if masquerading enabled via 'cantango-masquerade' gem
class PublisherAccount
  cantango :masquerade
end
```

## Main APIs

The main API consists of the following:

* Ability
* Can
* Model
* Scope
* Session

Each of these have a specific variant for both `Account` and `User`.

## Ability

* Account
* User
* Dsl
  * Relationship
* Relation
* Scope

The Dsl API extends the Ability API with Relation and Scope APIs.

### Account

```ruby
#account_ability(current_account)
#current_account_ability(:admin)
```

### User

```ruby
#user_ability(current_user)
#current_user_ability(:editor)
```


### Can API

* Account
* User

## Model APIs

* Account
* User

## Scope APIs

* Account
* User

## Session APIs

* Account
* User

## Contributing to cantango-api
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

## Copyright

Copyright (c) 2011 Kristian Mandrup. See LICENSE.txt for
further details.

